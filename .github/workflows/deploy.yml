name: Deploy to GitHub Pages

on:
  push:
    branches:
      - gh-pages  # Deploy only when gh-pages branch is updated
  workflow_dispatch:  # Allows manual deployment from GitHub UI

# Minimal required permissions following principle of least privilege
permissions:
  contents: read      # Read repository contents
  pages: write        # Write to GitHub Pages
  id-token: write     # Required for GitHub Pages deployment attestation

# Prevent multiple deployments from running simultaneously
concurrency:
  group: 'github-pages'
  cancel-in-progress: true  # Cancel in-progress runs when new deployment starts

jobs:
  deploy:
    # GitHub Pages deployment environment provides additional security and monitoring
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4  # Updated to latest stable version for better security and performance
        with:
          ref: gh-pages           # Explicitly specify branch (redundant but clear)
          fetch-depth: 1          # Shallow clone for faster checkout since we only need current state
          
      - name: Validate website directory
        run: |
          # Verify the website directory exists and contains files
          if [ ! -d "./website" ]; then
            echo "Error: ./website directory not found in gh-pages branch"
            echo "Please ensure your build process outputs files to ./website directory"
            exit 1
          fi
          
          # Check if directory has content
          file_count=$(find ./website -type f | wc -l)
          if [ "$file_count" -eq 0 ]; then
            echo "Error: ./website directory is empty"
            echo "No files found to deploy"
            exit 1
          fi
          
          echo "Found $file_count files ready for deployment"
          
      - name: Setup GitHub Pages configuration
        uses: actions/configure-pages@v4  # Updated to v4 for improved reliability and features
        
      - name: Upload website artifact to Pages
        uses: actions/upload-pages-artifact@v2  # Updated to v2 for better performance
        with:
          path: './website'
          retention-days: 1  # Clean up deployment artifacts after 1 day to save storage
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3  # Updated to v3 for enhanced deployment capabilities
        
      - name: Report deployment success
        run: |
          echo "üöÄ Deployment completed successfully!"
          echo "üìç Site URL: ${{ steps.deployment.outputs.page_url }}"
          echo "‚è∞ Deployed at: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          
          # Optional: Verify the deployment is accessible
          echo "üîç Verifying site accessibility..."
          if curl -f -s -o /dev/null -w "%{http_code}" "${{ steps.deployment.outputs.page_url }}" | grep -q "200"; then
            echo "‚úÖ Site is responding successfully"
          else
            echo "‚ö†Ô∏è  Site may still be propagating (this is normal for new deployments)"
          fi
